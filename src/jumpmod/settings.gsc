// Autogenerated by json2gsc
// DO NOT EDIT

set_level_difficulties()
{
    level.difficulty["Dan_JumpV3"] = "unknown";
    level.difficulty["[sob]EasyJump"] = "unknown";
    level.difficulty["bc_bocli"] = "easy";
    level.difficulty["bitch"] = "medium";
    level.difficulty["ch_quickie"] = "hard";
    level.difficulty["ch_space"] = "medium";
    level.difficulty["cj_cow"] = "easy";
    level.difficulty["cj_hallwayofdoom"] = "easy";
    level.difficulty["cj_wolfjump"] = "easy";
    level.difficulty["cls_industries"] = "medium";
    level.difficulty["cp_easy_jump"] = "easy";
    level.difficulty["cp_sirens_call"] = "expert";
    level.difficulty["cs_smoke"] = "easy";
    level.difficulty["ct_aztec"] = "easy";
    level.difficulty["ddd_easy_jump"] = "easy";
    level.difficulty["double_vision"] = "easy";
    level.difficulty["fm_squishydeath_easy"] = "medium";
    level.difficulty["fm_squishydeath_hard"] = "hard";
    level.difficulty["funjump"] = "medium";
    level.difficulty["gg_heaven"] = "hard";
    level.difficulty["gg_neon"] = "hard";
    level.difficulty["gg_neon_v2"] = "hard";
    level.difficulty["gg_neon_v3"] = "expert";
    level.difficulty["gg_shortbounce"] = "hard";
    level.difficulty["groms_skatepark"] = "medium";
    level.difficulty["hardjump"] = "expert";
    level.difficulty["jm_House_of_pain"] = "unknown";
    level.difficulty["jm_Krime"] = "unknown";
    level.difficulty["jm_bounce"] = "medium";
    level.difficulty["jm_canonjump"] = "medium";
    level.difficulty["jm_castle"] = "hard";
    level.difficulty["jm_classique"] = "hard";
    level.difficulty["jm_crispy"] = "easy";
    level.difficulty["jm_everything"] = "expert";
    level.difficulty["jm_fear"] = "hard";
    level.difficulty["jm_foundry"] = "hard";
    level.difficulty["jm_gap"] = "hard";
    level.difficulty["jm_gayfected"] = "medium";
    level.difficulty["jm_ghoti"] = "medium";
    level.difficulty["jm_hollywood"] = "easy";
    level.difficulty["jm_infiniti"] = "easy";
    level.difficulty["jm_kubuntu"] = "easy";
    level.difficulty["jm_lockover"] = "hard";
    level.difficulty["jm_maniacmansion"] = "hard";
    level.difficulty["jm_motion_light"] = "medium";
    level.difficulty["jm_motion_pro"] = "hard";
    level.difficulty["jm_rikku"] = "easy";
    level.difficulty["jm_robbery"] = "medium";
    level.difficulty["jm_skysv4c"] = "easy";
    level.difficulty["jm_speed"] = "medium";
    level.difficulty["jm_tools"] = "easy";
    level.difficulty["jm_towering_inferno"] = "medium";
    level.difficulty["jt_dunno"] = "medium";
    level.difficulty["jump_colors"] = "medium";
    level.difficulty["kn_angry"] = "hard";
    level.difficulty["krime_pyramid"] = "hard";
    level.difficulty["mp_jump"] = "easy";
    level.difficulty["nev_codered"] = "expert";
    level.difficulty["nev_firstonev2"] = "hard";
    level.difficulty["nev_jumpfacility"] = "medium";
    level.difficulty["nev_jumpfacilityv2"] = "hard";
    level.difficulty["nev_namedspace"] = "medium";
    level.difficulty["nev_templeofPoseidonv2"] = "expert";
    level.difficulty["nm_castle"] = "easy";
    level.difficulty["nm_jump"] = "easy";
    level.difficulty["nm_mansion"] = "medium";
    level.difficulty["nm_portal"] = "medium";
    level.difficulty["nm_race"] = "easy";
    level.difficulty["nm_tower"] = "easy";
    level.difficulty["nm_toybox_easy"] = "easy";
    level.difficulty["nm_toybox_hard"] = "medium";
    level.difficulty["nm_trap"] = "medium";
    level.difficulty["nm_unlocked"] = "easy";
    level.difficulty["peds_pace"] = "easy";
    level.difficulty["peds_palace"] = "easy";
    level.difficulty["peds_parkour"] = "medium";
    level.difficulty["peds_puzzle"] = "easy";
    level.difficulty["race"] = "easy";
    level.difficulty["railyard_jump_hard"] = "hard";
    level.difficulty["railyard_jump_light"] = "easy";
    level.difficulty["railyard_jump_ultra"] = "expert";
    level.difficulty["skratch_easy_v2"] = "easy";
    level.difficulty["skratch_hard_v2"] = "hard";
    level.difficulty["son-of-bitch"] = "medium";
    level.difficulty["svb_darkblade"] = "medium";
    level.difficulty["svb_hallway"] = "easy";
    level.difficulty["svb_marathon"] = "medium";
    level.difficulty["svb_rage"] = "medium";
    level.difficulty["svb_sewer"] = "medium";
    level.difficulty["svt_xmas_v2"] = "hard";
    level.difficulty["ultra_gap_training"] = "all";
    level.difficulty["vik_jump"] = "easy";
    level.difficulty["zaitroofs"] = "easy";
    level.difficulty["zaittower2"] = "easy";
    level.difficulty["zh_farbe"] = "hard";
    level.difficulty["zh_mario_thwomp"] = "hard";
    level.difficulty["zh_mirage"] = "hard";
    level.difficulty["zh_pulse"] = "hard";
    level.difficulty["zh_steampunk"] = "expert";
    level.difficulty["zh_unknown"] = "hard";
}

map_setup()
{
    mapname = toLower(level.mapname);
    switch(mapname) {
        case "Dan_JumpV3":
            level.maptitle = "Dan_JumpV3";
            level.mapauthor = "unknown";
            level.timelimit = 30;
        break;
        case "[sob]EasyJump":
            level.maptitle = "Easy Jump [SOB]";
            level.mapauthor = "[SoB]Mr.I4ggY* House";
            level.timelimit = 30;
        break;
        case "bc_bocli":
            level.maptitle = "bc_bocli";
            level.mapauthor = "unknown";
            level.timelimit = 6;
        break;
        case "bitch":
            level.maptitle = "bitch";
            level.mapauthor = "Leveller";
            level.timelimit = 20;
        break;
        case "ch_quickie":
            level.maptitle = "Quickie";
            level.mapauthor = "thecheeseman";
            level.timelimit = 20;
        break;
        case "ch_space":
            level.maptitle = "Space";
            level.mapauthor = "thecheeseman";
            level.timelimit = 20;
        break;
        case "cj_cow":
            level.maptitle = "cj_cow";
            level.mapauthor = "unknown";
            level.timelimit = 6;
        break;
        case "cj_hallwayofdoom":
            level.maptitle = "cj_hallwayofdoom";
            level.mapauthor = "unknown";
            level.timelimit = 7;
        break;
        case "cj_wolfjump":
            level.maptitle = "cj_wolfjump";
            level.mapauthor = "unknown";
            level.timelimit = 12;
        break;
        case "cls_industries":
            level.maptitle = "cls_industries";
            level.mapauthor = "unknown";
            level.timelimit = 20;
            healspots[0] = (2464, 433, -967);
            healspots[1] = (592, 626, -1383);
            healspots[2] = (345, 460, -1218);
            grenadespots[0] = (2595, 402, -1014);
            grenadespots[1] = (694, 625, -1463);
        break;
        case "cp_easy_jump":
            level.maptitle = "cp_easy_jump";
            level.mapauthor = "unknown";
            level.timelimit = 10;
        break;
        case "cp_sirens_call":
            level.maptitle = "cp_sirens_call";
            level.mapauthor = "unknown";
            level.timelimit = 30;
        break;
        case "cs_smoke":
            level.maptitle = "cs_smoke";
            level.mapauthor = "unknown";
            level.timelimit = 6;
        break;
        case "ct_aztec":
            level.maptitle = "ct_aztec";
            level.mapauthor = "unknown";
            level.timelimit = 7;
        break;
        case "ddd_easy_jump":
            level.maptitle = "ddd_easy_jump";
            level.mapauthor = "unknown";
            level.timelimit = 7;
        break;
        case "double_vision":
            level.maptitle = "double_vision";
            level.mapauthor = "unknown";
            level.timelimit = 8;
            healspots[0] = (137, -1245, 215);
            grenadespots[0] = (102, -991, -18);
        break;
        case "fm_squishydeath_easy":
            level.maptitle = "fm_squishydeath_easy";
            level.mapauthor = "unknown";
            level.timelimit = 20;
            ladderjumps[0]["from"] = (-2110, 2480, -1534);
            ladderjumps[0]["to"] = (-2050, 1905, -1727);
            ladderjumps[0]["angles"] = (0, -90, 0);
            ladderjumps[0]["distance"] = 36;
        break;
        case "fm_squishydeath_hard":
            level.maptitle = "fm_squishydeath_hard";
            level.mapauthor = "unknown";
            level.timelimit = 20;
            ladderjumps[0]["from"] = (-2110, 2480, -1534);
            ladderjumps[0]["to"] = (-2050, 1905, -1727);
            ladderjumps[0]["angles"] = (0, -90, 0);
            ladderjumps[0]["distance"] = 36;
        break;
        case "funjump":
            level.maptitle = "funjump";
            level.mapauthor = "unknown";
            level.timelimit = 20;
            ladderjumps[0]["from"] = (146, 3415, -2644);
            ladderjumps[0]["to"] = (146, 3040, -2644);
            ladderjumps[0]["angles"] = (0, -90, 0);
            ladderjumps[0]["distance"] = 24;
            ladderjumps[1]["from"] = (39, 2882, -2644);
            ladderjumps[1]["to"] = (46, 3248, -2644);
            ladderjumps[1]["angles"] = (0, 90, 0);
            ladderjumps[1]["distance"] = 96;
            ladderjumps[2]["from"] = (978, 5782, -140);
            ladderjumps[2]["to"] = (968, 5781, 255);
            ladderjumps[2]["angles"] = (0, 180, 0);
            ladderjumps[2]["distance"] = 36;
        break;
        case "gg_heaven":
            level.maptitle = "Heaven";
            level.mapauthor = "TheGoog";
            level.timelimit = 30;
        break;
        case "gg_neon":
            level.maptitle = "Neon (V1)";
            level.mapauthor = "TheGoog";
            level.timelimit = 30;
        break;
        case "gg_neon_v2":
            level.maptitle = "Neon (V2)";
            level.mapauthor = "TheGoog";
            level.timelimit = 30;
        break;
        case "gg_neon_v3":
            level.maptitle = "Neon (V3)";
            level.mapauthor = "TheGoog";
            level.timelimit = 30;
        break;
        case "gg_shortbounce":
            level.maptitle = "Short Bounce";
            level.mapauthor = "TheGoog";
            level.timelimit = 30;
        break;
        case "groms_skatepark":
            level.maptitle = "groms_skatepark";
            level.mapauthor = "unknown";
            level.timelimit = 12;
            ladderjumps[0]["from"] = (1366, 82, 448);
            ladderjumps[0]["to"] = (1206, -68, 664);
            ladderjumps[0]["angles"] = (0, -90, 0);
            ladderjumps[0]["distance"] = 64;
        break;
        case "hardjump":
            level.maptitle = "hardjump";
            level.mapauthor = "unknown";
            level.timelimit = 20;
            ladderjumps[0]["from"] = (-1903, -3787, -195);
            ladderjumps[0]["to"] = (-1937, -3789, -1231);
            ladderjumps[0]["angles"] = (0, -180, 0);
            ladderjumps[0]["distance"] = 36;
        break;
        case "jm_House_of_pain":
            level.maptitle = "jm_House_of_pain";
            level.mapauthor = "unknown";
            level.timelimit = 30;
        break;
        case "jm_Krime":
            level.maptitle = "jm_Krime";
            level.mapauthor = "unknown";
            level.timelimit = 30;
        break;
        case "jm_bounce":
            level.maptitle = "jm_bounce";
            level.mapauthor = "unknown";
            level.timelimit = 20;
        break;
        case "jm_canonjump":
            level.maptitle = "jm_canonjump";
            level.mapauthor = "unknown";
            level.timelimit = 15;
            ladderjumps[0]["from"] = (-4014, -899, -4383);
            ladderjumps[0]["to"] = (-3524, -891, -4415);
            ladderjumps[0]["angles"] = (0, 0, 0);
            ladderjumps[0]["distance"] = 64;
        break;
        case "jm_castle":
            level.maptitle = "jm_castle";
            level.mapauthor = "unknown";
            level.timelimit = 20;
        break;
        case "jm_classique":
            level.maptitle = "jm_classique";
            level.mapauthor = "unknown";
            level.timelimit = 30;
            ladderjumps[0]["from"] = (4980, 1266, 128);
            ladderjumps[0]["to"] = (3167, -802, 2256);
            ladderjumps[0]["angles"] = (0, -90, 0);
            ladderjumps[0]["distance"] = 64;
            ladderjumps[1]["from"] = (6703, 1779, -9279);
            ladderjumps[1]["to"] = (6659, -475, -9119);
            ladderjumps[1]["angles"] = (0, 180, 0);
            ladderjumps[1]["distance"] = 64;
            ladderjumps[2]["from"] = (4700, 992, -5631);
            ladderjumps[2]["to"] = (5204, 992, -5183);
            ladderjumps[2]["angles"] = (0, 0, 0);
            ladderjumps[2]["distance"] = 64;
        break;
        case "jm_crispy":
            level.maptitle = "jm_crispy";
            level.mapauthor = "unknown";
            level.timelimit = 5;
        break;
        case "jm_everything":
            level.maptitle = "jm_everything";
            level.mapauthor = "unknown";
            level.timelimit = 40;
        break;
        case "jm_fear":
            level.maptitle = "jm_fear";
            level.mapauthor = "unknown";
            level.timelimit = 15;
            ladderjumps[0]["from"] = (3884, 800, 1408);
            ladderjumps[0]["to"] = (3884, 1030, 800);
            ladderjumps[0]["angles"] = (0, 90, 0);
            ladderjumps[0]["distance"] = 64;
        break;
        case "jm_foundry":
            level.maptitle = "jm_foundry";
            level.mapauthor = "unknown";
            level.timelimit = 20;
        break;
        case "jm_gap":
            level.maptitle = "jm_gap";
            level.mapauthor = "unknown";
            level.timelimit = 20;
        break;
        case "jm_gayfected":
            level.maptitle = "jm_gayfected";
            level.mapauthor = "unknown";
            level.timelimit = 30;
        break;
        case "jm_ghoti":
            level.maptitle = "jm_ghoti";
            level.mapauthor = "unknown";
            level.timelimit = 15;
        break;
        case "jm_hollywood":
            level.maptitle = "jm_hollywood";
            level.mapauthor = "unknown";
            level.timelimit = 7;
        break;
        case "jm_infiniti":
            level.maptitle = "jm_infiniti";
            level.mapauthor = "unknown";
            level.timelimit = 12;
        break;
        case "jm_kubuntu":
            level.maptitle = "jm_kubuntu";
            level.mapauthor = "unknown";
            level.timelimit = 10;
        break;
        case "jm_lockover":
            level.maptitle = "jm_lockover";
            level.mapauthor = "unknown";
            level.timelimit = 20;
        break;
        case "jm_maniacmansion":
            level.maptitle = "jm_maniacmansion";
            level.mapauthor = "unknown";
            level.timelimit = 20;
            healspots[0] = (2076, 1144, -113);
            grenadespots[0] = (1705, 1138, -113);
        break;
        case "jm_motion_light":
            level.maptitle = "jm_motion_light";
            level.mapauthor = "unknown";
            level.timelimit = 20;
            healspots[0] = (-221, 1644, -1414);
            healspots[1] = (-1733, 3342, -1287);
            healspots[2] = (-1182, 3452, -1006);
            grenadespots[0] = (-224, 1350, -1414);
            grenadespots[1] = (-1732, 3031, -1207);
            grenadespots[2] = (-1600, 3446, -929);
        break;
        case "jm_motion_pro":
            level.maptitle = "jm_motion_pro";
            level.mapauthor = "unknown";
            level.timelimit = 20;
            healspots[0] = (-221, 1644, -1414);
            healspots[1] = (-1733, 3342, -1287);
            healspots[2] = (-1182, 3452, -1006);
            grenadespots[0] = (-224, 1350, -1414);
            grenadespots[1] = (-1732, 3031, -1207);
            grenadespots[2] = (-1600, 3446, -929);
        break;
        case "jm_rikku":
            level.maptitle = "jm_rikku";
            level.mapauthor = "unknown";
            level.timelimit = 5;
        break;
        case "jm_robbery":
            level.maptitle = "jm_robbery";
            level.mapauthor = "unknown";
            level.timelimit = 12;
        break;
        case "jm_skysv4c":
            level.maptitle = "jm_skysv4c";
            level.mapauthor = "unknown";
            level.timelimit = 12;
            ladderjumps[0]["from"] = (1488, 238, 1628);
            ladderjumps[0]["to"] = (3357, 257, 8);
            ladderjumps[0]["angles"] = (0, 0, 0);
            ladderjumps[0]["distance"] = 96;
        break;
        case "jm_speed":
            level.maptitle = "jm_speed";
            level.mapauthor = "unknown";
            level.timelimit = 15;
        break;
        case "jm_tools":
            level.maptitle = "jm_tools";
            level.mapauthor = "unknown";
            level.timelimit = 12;
        break;
        case "jm_towering_inferno":
            level.maptitle = "jm_towering_inferno";
            level.mapauthor = "unknown";
            level.timelimit = 15;
        break;
        case "jt_dunno":
            level.maptitle = "jt_dunno";
            level.mapauthor = "unknown";
            level.timelimit = 12;
        break;
        case "jump_colors":
            level.maptitle = "jump_colors";
            level.mapauthor = "unknown";
            level.timelimit = 10;
            ladderjumps[0]["from"] = (-159, 1598, -159);
            ladderjumps[0]["to"] = (-159, 1075, -319);
            ladderjumps[0]["angles"] = (0, -90, 0);
            ladderjumps[0]["distance"] = 64;
        break;
        case "kn_angry":
            level.maptitle = "kn_angry";
            level.mapauthor = "unknown";
            level.timelimit = 20;
            healspots[0] = (960, 31, 1040);
            grenadespots[0] = (966, 434, 976);
        break;
        case "krime_pyramid":
            level.maptitle = "krime_pyramid";
            level.mapauthor = "unknown";
            level.timelimit = 20;
            healspots[0] = (-1169, 1799, 459);
        break;
        case "mp_jump":
            level.maptitle = "mp_jump";
            level.mapauthor = "unknown";
            level.timelimit = 15;
        break;
        case "nev_codered":
            level.maptitle = "Code Red";
            level.mapauthor = "Nevander";
            level.timelimit = 20;
        break;
        case "nev_firstonev2":
            level.maptitle = "First One (V2)";
            level.mapauthor = "Nevander";
            level.timelimit = 20;
        break;
        case "nev_jumpfacility":
            level.maptitle = "Jump Facility";
            level.mapauthor = "Nevander";
            level.timelimit = 20;
            ladderjumps[0]["from"] = (2240, 432, 2078);
            ladderjumps[0]["to"] = (2667, 417, 2256);
            ladderjumps[0]["angles"] = (0, 90, 0);
            ladderjumps[0]["distance"] = 64;
            healspots[0] = (410, -222, 1224);
            healspots[1] = (-411, -848, 1328);
            healspots[2] = (1513, 1060, 2656);
            grenadespots[0] = (276, -32, 944);
            grenadespots[1] = (326, -857, 1336);
            grenadespots[2] = (1683, 747, 2576);
        break;
        case "nev_jumpfacilityv2":
            level.maptitle = "Jump Facility (V2)";
            level.mapauthor = "Nevander";
            level.timelimit = 20;
        break;
        case "nev_namedspace":
            level.maptitle = "Named Space";
            level.mapauthor = "Nevander";
            level.timelimit = 30;
            healspots[0] = (6055, 95, 588);
            grenadespots[0] = (5805, 649, 16);
        break;
        case "nev_templeofPoseidonv2":
            level.maptitle = "Temple of Poseidon (V2)";
            level.mapauthor = "Nevander";
            level.timelimit = 30;
        break;
        case "nm_castle":
            level.maptitle = "Castle";
            level.mapauthor = "Nightmare";
            level.timelimit = 12;
            ladderjumps[0]["from"] = (33, -424, -623);
            ladderjumps[0]["to"] = (64, 1537, 960);
            ladderjumps[0]["angles"] = (0, -90, 0);
            ladderjumps[0]["distance"] = 64;
        break;
        case "nm_jump":
            level.maptitle = "Jump";
            level.mapauthor = "Nightmare";
            level.timelimit = 6;
            ladderjumps[0]["from"] = (-1129, -548, -2455);
            ladderjumps[0]["to"] = (-1187, 242, -2367);
            ladderjumps[0]["angles"] = (0, -180, 0);
            ladderjumps[0]["distance"] = 64;
        break;
        case "nm_mansion":
            level.maptitle = "Mansion";
            level.mapauthor = "Nightmare";
            level.timelimit = 6;
        break;
        case "nm_portal":
            level.maptitle = "Portal";
            level.mapauthor = "Nightmare";
            level.timelimit = 15;
            healspots[0] = (2360, 2686, 1152);
            grenadespots[0] = (2901, 2683, 1152);
        break;
        case "nm_race":
            level.maptitle = "Race";
            level.mapauthor = "Nightmare";
            level.timelimit = 10;
        break;
        case "nm_tower":
            level.maptitle = "Tower";
            level.mapauthor = "Nightmare";
            level.timelimit = 7;
        break;
        case "nm_toybox_easy":
            level.maptitle = "Toybox (Easy)";
            level.mapauthor = "Nightmare";
            level.timelimit = 12;
        break;
        case "nm_toybox_hard":
            level.maptitle = "Toybox (Hard)";
            level.mapauthor = "Nightmare";
            level.timelimit = 12;
        break;
        case "nm_trap":
            level.maptitle = "Trap";
            level.mapauthor = "Nightmare";
            level.timelimit = 20;
        break;
        case "nm_unlocked":
            level.maptitle = "Unlocked";
            level.mapauthor = "Nightmare";
            level.timelimit = 15;
        break;
        case "peds_pace":
            level.maptitle = "Pace";
            level.mapauthor = "Pedsdude";
            level.timelimit = 8;
        break;
        case "peds_palace":
            level.maptitle = "Palace";
            level.mapauthor = "Pedsdude";
            level.timelimit = 12;
        break;
        case "peds_parkour":
            level.maptitle = "Parkour";
            level.mapauthor = "Pedsdude";
            level.timelimit = 15;
        break;
        case "peds_puzzle":
            level.maptitle = "Puzzle";
            level.mapauthor = "Pedsdude";
            level.timelimit = 12;
        break;
        case "race":
            level.maptitle = "race";
            level.mapauthor = "unknown";
            level.timelimit = 6;
        break;
        case "railyard_jump_hard":
            level.maptitle = "railyard_jump_hard";
            level.mapauthor = "unknown";
            level.timelimit = 15;
            ladderjumps[0]["from"] = (-1879, 680, 0);
            ladderjumps[0]["to"] = (-1874, 2223, 1205);
            ladderjumps[0]["angles"] = (0, -90, 0);
            ladderjumps[0]["distance"] = 64;
        break;
        case "railyard_jump_light":
            level.maptitle = "railyard_jump_light";
            level.mapauthor = "unknown";
            level.timelimit = 15;
            ladderjumps[0]["from"] = (-1879, 680, 0);
            ladderjumps[0]["to"] = (-1874, 2223, 1205);
            ladderjumps[0]["angles"] = (0, -90, 0);
            ladderjumps[0]["distance"] = 64;
        break;
        case "railyard_jump_ultra":
            level.maptitle = "railyard_jump_ultra";
            level.mapauthor = "unknown";
            level.timelimit = 15;
            ladderjumps[0]["from"] = (-1879, 680, 0);
            ladderjumps[0]["to"] = (-1874, 2223, 1205);
            ladderjumps[0]["angles"] = (0, -90, 0);
            ladderjumps[0]["distance"] = 64;
        break;
        case "skratch_easy_v2":
            level.maptitle = "sKratch Easy (V2)";
            level.mapauthor = "sKratchVanderBooth";
            level.timelimit = 15;
            ladderjumps[0]["from"] = (-762, 248, 2754);
            ladderjumps[0]["to"] = (-761, 664, 2648);
            ladderjumps[0]["angles"] = (0, 90, 0);
            ladderjumps[0]["distance"] = 64;
            ladderjumps[1]["from"] = (4590, 508, 1970);
            ladderjumps[1]["to"] = (5416, 508, 2328);
            ladderjumps[1]["angles"] = (0, 0, 0);
            ladderjumps[1]["distance"] = 64;
        break;
        case "skratch_hard_v2":
            level.maptitle = "sKratch Hard (V2)";
            level.mapauthor = "sKratchVanderBooth";
            level.timelimit = 15;
            ladderjumps[0]["from"] = (-762, 248, 2754);
            ladderjumps[0]["to"] = (-761, 664, 2648);
            ladderjumps[0]["angles"] = (0, 90, 0);
            ladderjumps[0]["distance"] = 64;
            ladderjumps[1]["from"] = (4590, 508, 1970);
            ladderjumps[1]["to"] = (5416, 508, 2328);
            ladderjumps[1]["angles"] = (0, 0, 0);
            ladderjumps[1]["distance"] = 64;
        break;
        case "son-of-bitch":
            level.maptitle = "son-of-bitch";
            level.mapauthor = "Leveller";
            level.timelimit = 12;
        break;
        case "svb_darkblade":
            level.maptitle = "Darkblade";
            level.mapauthor = "sKratchVanderBooth";
            level.timelimit = 30;
        break;
        case "svb_hallway":
            level.maptitle = "Hallway";
            level.mapauthor = "sKratchVanderBooth";
            level.timelimit = 15;
        break;
        case "svb_marathon":
            level.maptitle = "Marathon";
            level.mapauthor = "sKratchVanderBooth";
            level.timelimit = 15;
        break;
        case "svb_rage":
            level.maptitle = "Rage";
            level.mapauthor = "sKratchVanderBooth";
            level.timelimit = 30;
        break;
        case "svb_sewer":
            level.maptitle = "Sewer";
            level.mapauthor = "sKratchVanderBooth";
            level.timelimit = 15;
            ladderjumps[0]["from"] = (-5750, -356, -41);
            ladderjumps[0]["to"] = (-4083, -359, -195);
            ladderjumps[0]["angles"] = (0, 0, 0);
            ladderjumps[0]["distance"] = 36;
            healspots[0] = (-2736, 15, -57);
            grenadespots[0] = (-2979, -343, -195);
            grenadespots[1] = (-2901, 9, -135);
        break;
        case "svt_xmas_v2":
            level.maptitle = "Xmas (V2)";
            level.mapauthor = "Soviet";
            level.timelimit = 15;
        break;
        case "ultra_gap_training":
            level.maptitle = "ultra_gap_training";
            level.mapauthor = "unknown";
            level.timelimit = 15;
        break;
        case "vik_jump":
            level.maptitle = "vik_jump";
            level.mapauthor = "unknown";
            level.timelimit = 15;
        break;
        case "zaitroofs":
            level.maptitle = "zaitroofs";
            level.mapauthor = "unknown";
            level.timelimit = 12;
        break;
        case "zaittower2":
            level.maptitle = "zaittower2";
            level.mapauthor = "unknown";
            level.timelimit = 6;
        break;
        case "zh_farbe":
            level.maptitle = "Farbe";
            level.mapauthor = "Zilch";
            level.timelimit = 30;
        break;
        case "zh_mario_thwomp":
            level.maptitle = "Mario Thwomp";
            level.mapauthor = "Zilch";
            level.timelimit = 30;
        break;
        case "zh_mirage":
            level.maptitle = "Mirage";
            level.mapauthor = "Zilch";
            level.timelimit = 30;
        break;
        case "zh_pulse":
            level.maptitle = "Pulse";
            level.mapauthor = "Zilch";
            level.timelimit = 30;
        break;
        case "zh_steampunk":
            level.maptitle = "Steampunk";
            level.mapauthor = "Zilch";
            level.timelimit = 30;
        break;
        case "zh_unknown":
            level.maptitle = "Unknown";
            level.mapauthor = "Zilch";
            level.timelimit = 30;
        break;
    }

    level.mapsettings = [];

    if(isDefined(ladderjumps))
        level.mapsettings["ladderjumps"] = ladderjumps;
    if(isDefined(healspots))
        level.mapsettings["healspots"] = healspots;
    if(isDefined(grenadespots))
        level.mapsettings["grenadespots"] = grenadespots;
    if(isDefined(panzerspots))
        level.mapsettings["panzerspots"] = panzerspots;

    thread maps\mp\gametypes\jmp::mapfixes();
}

// Autogenerated by json2gsc
// DO NOT EDIT
